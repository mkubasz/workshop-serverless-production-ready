service: workshop-${self:custom.name}

frameworkVersion: '3'

custom:
  name: mkubaszek
  export-env:
    overwrite: true

plugins:
  - serverless-export-env

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    serviceName: ${self:service}
    stage: ${sls:stage}

functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
          path: /
          method: get
  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants
          method: get
    environment:
      restaurants_table: !Ref RestaurantsTable
  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search
          method: post

  place-order:
    handler: functions/place-order.handler
    events:
      - http:
          path: /orders
          method: post

  notify-restaurant:
    handler: functions/notify-restaurant.handler

resources:
  Resources:
    RestaurantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
    WebCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: web
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED
    ServerCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: server
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_ADMIN_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED
    ServiceUrlParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Type: String
        Name: /${self:service}/${sls:stage}/serviceUrl
        Value:
          Fn::Join:
            - ''
            - - https://
              - !Ref ApiGatewayRestApi
              - .execute-api.${aws:region}.amazonaws.com/${sls:stage}
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AliasAttributes:
          - email
        UsernameConfiguration:
          CaseSensitive: false
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        Schema:
          - AttributeDataType: String
            Mutable: true
            Name: given_name
            Required: true
            StringAttributeConstraints:
              MinLength: 1
          - AttributeDataType: String
            Mutable: true
            Name: family_name
            Required: true
            StringAttributeConstraints:
              MinLength: 1
          - AttributeDataType: String
            Mutable: true
            Name: email
            Required: true
            StringAttributeConstraints:
              MinLength: 1
    EventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: order_events_${self:service}

    RestaurantNotificationTopic:
      Type: AWS::SNS::Topic

  Outputs:
    RestaurantsTableName:
      Value: !Ref RestaurantsTable
    CognitoUserPoolId:
      Value: !Ref CognitoUserPool
    CognitoUserPoolArn:
      Value: !GetAtt CognitoUserPool.Arn
    CognitoUserPoolWebClientId:
      Value: !Ref WebCognitoUserPoolClient
    CognitoUserPoolServerClientId:
      Value: !Ref ServerCognitoUserPoolClient
    EventBusName:
      Value: !Ref EventBus
    RestaurantNotificationTopicArn:
      Value: !Ref RestaurantNotificationTopic
    RestaurantNotificationTopicName:
      Value: !GetAtt RestaurantNotificationTopic.TopicName